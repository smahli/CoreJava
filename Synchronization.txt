Sunchronization  Introduction


_________________________________

It is the process by which we control the accessability of multiple threads 
to a particular shared resource


2. Problem which can occur without synchronization:
	1. data inconsistancy
	2. Thread interference 


3. Advantages of synchronization :
	1. No data inconsistancy 
	2. No thread interference 

4. Disadvantages of synchronization:

	1. Increases the wating time period of threads 
	2. Create performance problems 
	3.Deadlock

To overcome synchronization disadvantages , java provides pne package i.e. java.util.concurrent




TYpes of Synchronization


1. Process Synchronization (Not present in Java MultiThreading )
2. Thread Synchronization 
	1.Mutual Exclusive 
		Can be achieved by 3 Ways 
		1. By Synchronization Method
		2. By Synchronization
		3. By Static Synchronization

	2.Coopration
		Can be achieved by following methods of object class
		wait()
		notify()
		notifyAll()






This Example Code Explains Why we need Synchronization



import java.lang.Thread;
public class BookTheatreSeat {
    int totalSeat =10;
    void bookSeat(int seat){
        if (totalSeat>=seat){
            System.out.println("Seats Booked Successfully");
            totalSeat=totalSeat-seat;
            System.out.println(totalSeat+" Seats left");

        }

        else{
            System.out.println(totalSeat+" Seats Left");
            System.out.println("Seat Cannot be booked");
        }

    }
}
class MovieBookAPP extends Thread{
    static BookTheatreSeat b;
    int seats;
    @Override
    public void run() {

        b.bookSeat(seats);

    }

    public static void main(String[] args) {
        b= new BookTheatreSeat();
        MovieBookAPP obj = new MovieBookAPP();
        obj.seats=6;
        obj.start();

        MovieBookAPP amit = new MovieBookAPP();
        amit.seats=7;
        amit.start();

    }                   // Data Inconsistency is occurring in this program
}




OUTPUT   


"C:\Program Files\Eclipse Foundation\jdk-11.0.12.7-hotspot\bin\java.exe" "-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2021.2.1\lib\idea_rt.jar=63417:C:\Program Files\JetBrains\IntelliJ IDEA 2021.2.1\bin" -Dfile.encoding=UTF-8 -classpath C:\Users\Asus\IdeaProjects\String\out\production\String MovieBookAPP
Seats Booked Successfully
Seats Booked Successfully
4 Seats left
-3 Seats left

Process finished with exit code 0






After Synchronization 





we use synchronize keyword



example code


import java.lang.Thread;
public class BookTheatreSeat {
    int totalSeat =10;
     synchronized void bookSeat(int seat){
        if (totalSeat>=seat){
            System.out.println(Thread.currentThread().getName()+ " Seats Booked Successfully");
            totalSeat=totalSeat-seat;
            System.out.println(totalSeat+" Seats left");

        }

        else{

            System.out.println(Thread.currentThread().getName()+" Seat Cannot be booked");
            System.out.println(totalSeat+" Seats Left");
        }

    }
}
class MovieBookAPP extends Thread{
    static BookTheatreSeat b;
    int seats;
    @Override
    public void run() {

        b.bookSeat(seats);

    }

    public static void main(String[] args) {
        b= new BookTheatreSeat();
        MovieBookAPP obj = new MovieBookAPP();
        obj.seats=6;
        obj.start();

        MovieBookAPP amit = new MovieBookAPP();
        amit.seats=7;
        amit.start();

    }                  
}




OUTPUT


"C:\Program Files\Eclipse Foundation\jdk-11.0.12.7-hotspot\bin\java.exe" "-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2021.2.1\lib\idea_rt.jar=59726:C:\Program Files\JetBrains\IntelliJ IDEA 2021.2.1\bin" -Dfile.encoding=UTF-8 -classpath C:\Users\Asus\IdeaProjects\String\out\production\String MovieBookAPP
Thread-0 Seats Booked Successfully
4 Seats left
Thread-1 Seat Cannot be booked
4 Seats Left

Process finished with exit code 0





Synchronized Block Example code 


import java.lang.Thread;
public class BookTheatreSeat {
    int totalSeat =10;
     /*synchronized*/ void bookSeat(int seat){                // we can use synchronized method to synchronize threads
                                                        // It will consume a lot of time to execute if we have 1000 lines of codes
                                                        // So It will be better if we use Synchronize block used here
         System.out.println(Thread.currentThread().getName());
         System.out.println(Thread.currentThread().getName());
         System.out.println(Thread.currentThread().getName());
         System.out.println(Thread.currentThread().getName());
         System.out.println(Thread.currentThread().getName());
         System.out.println(Thread.currentThread().getName());
         System.out.println(Thread.currentThread().getName());
         System.out.println(Thread.currentThread().getName());

        synchronized (this){                        // This is an example of Synchronize block  only this code has to executed by different thread separately

             if (totalSeat>=seat){
                 System.out.println(Thread.currentThread().getName()+ " Seats Booked Successfully");
                 totalSeat=totalSeat-seat;
                 System.out.println(totalSeat+" Seats left");
            }

             else{

                 System.out.println(Thread.currentThread().getName()+" Seat Cannot be booked");
                 System.out.println(totalSeat+" Seats Left");
             }
        }
         System.out.println(Thread.currentThread().getName());
         System.out.println(Thread.currentThread().getName());
         System.out.println(Thread.currentThread().getName());
         System.out.println(Thread.currentThread().getName());
    }
}
class MovieBookAPP extends Thread{
    static BookTheatreSeat b;
    int seats;
    @Override
    public void run() {

        b.bookSeat(seats);

    }

    public static void main(String[] args) {
        b= new BookTheatreSeat();
        MovieBookAPP obj = new MovieBookAPP();
        obj.seats=4;
        obj.start();

        MovieBookAPP amit = new MovieBookAPP();
        amit.seats=3;
        amit.start();

    }
}





OUTPUT


"C:\Program Files\Eclipse Foundation\jdk-11.0.12.7-hotspot\bin\java.exe" "-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2021.2.1\lib\idea_rt.jar=55744:C:\Program Files\JetBrains\IntelliJ IDEA 2021.2.1\bin" -Dfile.encoding=UTF-8 -classpath C:\Users\Asus\IdeaProjects\String\out\production\String MovieBookAPP
Thread-1
Thread-1
Thread-1
Thread-1
Thread-1
Thread-1
Thread-1
Thread-1
Thread-0
Thread-0
Thread-0
Thread-0
Thread-0
Thread-0
Thread-0
Thread-0
Thread-1 Seats Booked Successfully
7 Seats left
Thread-1
Thread-0 Seats Booked Successfully
Thread-1
Thread-1
Thread-1
3 Seats left
Thread-0
Thread-0
Thread-0
Thread-0

Process finished with exit code 0






