		    THIS
		______________

this keyword is a refrence variable that refers to the current object

understand by code

public class ThisTest {
    int i ; // instance variable
    void setValues( int i){   // local variable
        this.i=i;            // if instance variable and local variable are same
                        // then compiler will print 0 why ? because inside that method only local variable assigned to itself  for eg(i=i) therefore avoiding this "this " keyword
                        //   is introduced if both variable different then no problem.
                        // this.i refers to Current class Instance variable

    }
    void show(){
        System.out.println(i);
    }
}
 class Test1{
    public static void main(String[] args) {
        ThisTest t = new ThisTest();
        t.setValues(10);
        t.show();

    }
}


Six uses of "This" Keyword
1. This keyword can be used to refer current class instance variable
2. this keyword can be used to invoke current class method.
3. this() can be used to invoke current class constructor.
4. this can be used to pass as an argument in the method call.
5. this can be used to pass as an argument in the constructor  call 
6. this can be used to return the current class instance from the method.


second use explain in 2. example code.

public class ThisUse2 {

    public void show(){
        System.out.println("Hello this is Show method");
    }
    public  void display(){
        show(); // show() and this.show() is same  as if we don't use this keyword then
                // compiler will automatically add "this " while invoking the method
    }

    public static void main(String[] args) {
        ThisUse2 t2 = new ThisUse2();
        t2.display();
    }
}


third use Explained in line 3


public class ThisUse3 {
    ThisUse3(){
        System.out.println(" No argument constructor");
    }
    ThisUse3(int i){
        System.out.println("Parameterised constructor");
    }

    public static void main(String[] args) {
        ThisUse3 t3 = new ThisUse3(10);

    }
}


fourth use explained in line 4

 public class ThisUse4 {
    public void show( ThisUse4 t4){  // don't forget to pass parameter (className objectName)
        System.out.println(" I am in show method");
    }
    public void display(){
        show(this);

    }

    public static void main(String[] args) {
        ThisUse4 t4 = new ThisUse4();
        t4.display();

    }
}


Fifth use of Explained in line 5



class Test22{
        Test22(ThisUse5 t5 ) {
            System.out.println(" Test Contructor argument");
        }

}
public class ThisUse5 {
    public void show(){
        Test22 t22 = new Test22(this);
    }


    public static void main(String[] args) {
        ThisUse5 t5 = new ThisUse5();
        t5.show();


    }
}
